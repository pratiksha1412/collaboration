package com.niit.collaboration.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.niit.collaboration.dao.UserDAO;
import com.niit.collaboration.model.User;

@RestController
public class UserController {
	
	
	@Autowired
	User user;

	@Autowired
	UserDAO userDAO;
	
	
	//just for testing whether controller is working or not
	@RequestMapping("/hello")
	public String sayHello()
	{
		return "hello";
	}
	
	/*
	@RequestMapping("/makeAdmin/{id},")
	public ResponseEntity<User> makeAdmin(@PathVariable("id")String id)
	{
		
	}
	

	

	// http://localhost:8080/collborationBackEnd/users
	@RequestMapping("/users")
	public ResponseEntity<List<User>> getAllUser() {
		List<User> users = userDAO.list();

		if (users.isEmpty()) {
			user.setErrorCode("404");
			user.setErrorMessage("no users are available");
			users.add(user);
		}

		return new ResponseEntity<List<User>>(users, HttpStatus.OK);
	}

	// http://localhost:8080/collborationBackEnd/users/id

	@RequestMapping("/users/{id}")
	public ResponseEntity<User> getUserByID(@PathVariable("id") String userID ) {
		user = userDAO.get("userID");

		if (user == null) {
			user = new User(); // to avoid null pointerexception(NLP)
			user.setErrorCode("404");
			user.setErrorMessage("User does not found with id" + userID);

		}
		return new ResponseEntity<User>(user, HttpStatus.OK);

	}

	// get and post

	// http://localhost:8080/collborationBackEnd/users/id

	@RequestMapping(value = "/users/", method = RequestMethod.POST)

	public ResponseEntity<User> authenticate(@RequestBody User user,HttpSession httpSession) {
		user = userDAO.validate(user.getId(), user.getPasssword());

		if (user == null) {
			user = new User(); // to avoid null pointerexception(NLP)
			user.setErrorCode("404");
			user.setErrorMessage("invalid  credintioal... plz try again");

		}
		
		else
		{
			user.setErrorCode("200");
			user.setErrorMessage("u are succefully loged in");

			//STORE THE ID IN HTTP SESSION
			httpSession.setAttribute("loggedInUserID",user.getId());
		}
		return new ResponseEntity<User>(user, HttpStatus.OK);

	}

	@RequestMapping(value = "/register/", method = RequestMethod.POST)

	public ResponseEntity<User> register(@RequestBody User user) {

		if (userDAO.save(user) == false) {

			user.setErrorCode("404");
			user.setErrorMessage("invalid  credintioal... plz try again");

		} else {
			user.setErrorCode("200");
			user.setErrorMessage("thank u for registration");
		}
		return new ResponseEntity<User>(user, HttpStatus.OK);

	}

	// post to create the record
	// put for update the record

	@RequestMapping(value = "/update/", method = RequestMethod.PUT)

	public ResponseEntity<User> update(@RequestBody User user) {

		if (userDAO.update(user) == false) {

			user.setErrorCode("404");
			user.setErrorMessage("the update is not success... plz try again");

		} else {
			user.setErrorCode("200");
			user.setErrorMessage("successfully updated the information");
		}
		return new ResponseEntity<User>(user, HttpStatus.OK);

	}

}
*/